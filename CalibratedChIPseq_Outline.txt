###########################################################################################################
########################Calibrated ChIP-seq  ##############################################################
###########################################################################################################


#align fastq files to the concatenated genomes

nohup PairedEnd_Bowtie2_SpikeIn_AlignmentFromList.pl -file align.files.csv -genome mm10 -spikein dm6 &

### align.files.csv has three tab-separated columns: Read1.fastq Read2.fastq filename

###Count number of reads to double check the normalisation factors

for file in *mm10*bam
do
echo $file
samtools idxstats $file | awk '{s+=$3+$4} END {print s}'
done

for file in *dm6*bam
do
echo $file
samtools idxstats $file | awk '{s+=$3+$4} END {print s}'
done

#Calculate downsample factors: see an example table attached

#######Downsample mm10 and dm6 bam files for all samples together

downsample_from_list_sambamba.pl -file mm10.downsample.csv

downsample_from_list_sambamba.pl -file dm6.downsample.csv

### mm10.downsample.csv has two tab-separated columns: filename fraction

####Generate bigwigfiles for individual replicates to assess the reproducibility

for file in *mm10*downsampled.bam
do
bam2bigwig_MACS2.pl -bam $file -readtype paired -genome mm10 -name $(echo $file | rev | cut -f 2- -d '.' | rev).MACS2
done

for file in *dm6*downsampled.bam
do
bam2bigwig_MACS2.pl -bam $file -readtype paired -genome dm6 -name $(echo $file | rev | cut -f 2- -d '.' | rev).MACS2
done


######Merge 3 replicates

###mm10

sambamba merge -t 56 MERGED.bam Rep1_downsampled.bam Rep2_downsampled.bam Rep3_downsampled.bam 


###dm6

sambamba merge -t 56 MERGED.bam Rep1_downsampled.bam Rep2_downsampled.bam Rep3_downsampled.bam 



#######Generate bigwigfiles for merged downsampled files

#mm10

for file in *mm10*downsampled*MERGED.bam
do
bam2bigwig_MACS2.pl -bam $file -readtype paired -genome mm10 -name $(echo $file | rev | cut -f 2- -d '.' | rev).MACS2
done


##########################################################################################
###########Count reads in peaks###########################################################
##########################################################################################


####Count reads from raw bam files for DESeq2 analysis

####subsample dm6 bam files to account for dm6/mm10 ratio in Inputs

subsample_bam_list_SpikeInInput.pl -file dm6.normalise.csv

####see an example table on how to calculate these subsampling factors

####count reads from dm6 subsampled files in dm6 unique gene bodies

##dm6

nohup GFF.ReadCountFromList.pl -gff dm6.refGene.GeneBody.Uniq.gff -file dm6.counts.csv -genome dm6 -rpkm FALSE &

###bed2gff.pl is used to generate a compatible with the script gff from a bed3 file

##mm10 

nohup GFF.ReadCountFromList.pl -gff peaks.gff -file mm10.raw.counts.csv -genome mm10 -rpkm FALSE &


#####Although I have used this approach originally, I have now switched to using multiBamSummary from deeptools to count reads in a set of bed intervals. It gives virtually the same read counts but is so much faster.


multiBamSummary BED-file --BED peaks.bed --bamfiles file1.bam file2.bam -o peaks.counts.results.npz --outRawCounts peaks.counts.results.txt -l file1 file2 -p 56 --ignoreDuplicates


#####For making metaplots and heatmaps, I use computeMatrix and plotProfile/plotHeatmap from the deeptools suite




























